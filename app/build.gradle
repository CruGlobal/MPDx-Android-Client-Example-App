apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.appdistribution'
//apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'com.google.firebase.firebase-perf'

apply plugin: 'org.ajoberstar.grgit'

apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "org.mpdx.example"
        minSdkVersion 21
        targetSdkVersion 33

        versionCode grgit.log(includes:['HEAD']).size()
        versionName project.version

        buildConfigField "String", "OKTA_AUTH_SCHEME", '"org.mpdx.example"'
        buildConfigField "String", "OKTA_CLIENT_ID", '"0oa1lhhexumq8ueTU0h8"'
        buildConfigField "String", "OKTA_DISCOVERY_URI", '"https://signon.okta.com"'

        manifestPlaceholders = [appAuthRedirectScheme: "org.mpdx.example"]

        vectorDrawables {
            useSupportLibrary = true
        }
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        proguardFiles 'proguard-rules.pro'
        proguardFiles 'proguard-rules-eventbus.pro'
        proguardFiles 'proguard-rules-material-design-badge.pro'
    }
    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        debug {
            versionNameSuffix '-dev'
            applicationIdSuffix ".dev"

            multiDexEnabled true
            pseudoLocalesEnabled true
        }
        qa {
            initWith debug
            matchingFallbacks = ['debug']

            versionNameSuffix '-qa'
            applicationIdSuffix ".qa"

        }
        release {
            minifyEnabled true
            shrinkResources true
        }
    }
    flavorDimensions 'environment'
    productFlavors {
        development {
            dimension 'environment'
            buildConfigField "String", "MPDX_API_BASE_URI", '"https://api.stage.mpdx.org/api/v2/"'

            manifestPlaceholders = [hostMpdxWeb: "stage.mpdx.org"]
        }

        production {
            dimension 'environment'
            buildConfigField "String", "MPDX_API_BASE_URI", '"https://api.mpdx.org/api/v2/"'

            manifestPlaceholders = [hostMpdxWeb: "mpdx.org"]
        }
    }
    variantFilter { variant ->
        if (variant.buildType.name == "release" && variant.flavors*.name.contains("development")) {
            setIgnore(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kapt {
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 9999)
        }
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += '-Xjvm-default=enable'
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }
    lintOptions {
        lintConfig file('../analysis/lint/lint.xml')
        htmlOutput file("$project.buildDir/reports/lint/lint.html")
        xmlOutput file("$project.buildDir/reports/lint/lintReport.xml")

        abortOnError true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    configurations.all {
        resolutionStrategy {
            force "org.hamcrest:hamcrest-core:${deps.hamcrest}"
            force "org.hamcrest:hamcrest-library:${deps.hamcrest}"
        }
    }
}

ext {
    gson = '2.9.0'
}

dependencies {
    implementation libs.kotlin.coroutines
    implementation libs.kotlin.coroutines.playServices

    implementation "androidx.activity:activity:${deps.androidX.activity}"
    implementation "androidx.activity:activity-ktx:${deps.androidX.activity}"
    implementation "androidx.core:core-ktx:${deps.androidX.core}"
    implementation libs.materialComponents

//    implementation libs.firebase.core
//    implementation libs.firebase.crashlytics
//    implementation "com.google.firebase:firebase-messaging:${deps.firebase.messaging}"
//    implementation "com.google.firebase:firebase-iid:${deps.firebase.id}"

    implementation "org.ccci.gto.android:gto-support-androidx-lifecycle:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-api-okhttp3:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-base:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-compat:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-core:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-dagger:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-firebase-crashlytics:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-jsonapi-retrofit2:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-kotlin-coroutines:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-okhttp3:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-util:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-okta:${deps.gtoSupport}"

    implementation "com.google.code.gson:gson:$gson"
    implementation libs.hilt
    implementation "com.jakewharton:butterknife:${deps.butterknife}"

    implementation 'com.github.Karumi:WeakDelegate:1.0.1'
    implementation "com.google.guava:guava:${deps.guava}"
    implementation "com.jakewharton.timber:timber:${deps.timber}"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.0'
    implementation libs.eventbus

    implementation "org.cru.mpdx.android:library:${deps.mpdxLib}"
    implementation "org.cru.mpdx.android:core:${deps.mpdxLib}"
    implementation "org.cru.mpdx.android:okta:${deps.mpdxLib}"

    // debugging tools
    debugImplementation "androidx.multidex:multidex:${deps.androidX.multidex}"
    debugImplementation libs.facebook.flipper
    debugImplementation libs.facebook.flipper.plugins.network
    debugImplementation "com.facebook.soloader:soloader:${deps.facebookSoloader}"
    debugImplementation "com.kgurgul.flipper:flipper-realm-android:${deps.flipperRealm}"
    debugImplementation libs.leakcanary
    debugImplementation libs.okhttp3.interceptors.logging
    debugImplementation "org.ccci.gto.android:gto-support-leakcanary2:${deps.gtoSupport}"

    kapt libs.dagger.compiler
    kapt libs.hilt.compiler
}
